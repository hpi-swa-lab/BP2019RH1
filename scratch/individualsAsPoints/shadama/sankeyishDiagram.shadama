program "Sankeyisch Diagram"

breed Turtle (x, y, r, g, b, a, genderX, districtX, ageX, random)
breed GenderAxis (x, y, r, g, b, a)
breed DistrictAxis (x, y, r, g, b, a)
breed AgeAxis (x, y, r, g, b, a)
breed Filler (x, y)
breed Image (x, y, r, g, b, a)
patch Field (r, g, b, a)
  
data ShadamaData("shadamaData.csv", "csv")
data Label("labelForSankeyishDiagram.png", "image")

def setA() {
  this.a = 1.0; 
}

def setGenderAxis() {
  this.x = 2;
}

def setAgeAxis() {
  this.x = 255; 
}

def setDistrictAxis() {
  this.x = 510; 
}

def setRGBForGender() {
  if (this.genderX == 0) {
    this.r = 1;
    this.b = 0.1; 
    this.g = 0.1;
  }
  if (this.genderX == 512) {
  	this.r = 0.1;
    this.b = 1;
    this.g = 0;
  }
}

def setRGBForAge() {
  this.r = 1.0;
  this.g = this.y / 512.0;
  this.b = this.x / 512.0;
}

def setRGBForDistrict() {
  this.r = this.x / 512.0;
  this.g = this.y / 512.0;
  this.b = 0.5;
}

def setStartForGender() {
  this.x = 0;
  this.y = this.genderX * 0.95;
}

def setStartForAge() {
  this.x = 255;
  this.y = this.ageX * 0.95;
}

def setStartForDistrict() {
  this.x = 512;
  this.y = this.districtX * 0.95;
}

def move(speed) {
  var x = this.x;
  var y = this.y;
  var bridge = 20;
  var agePos = 255;
  var districtPos = 512;
  var genderPos = 0;
  var scale = 0.95;
    
  if (this.x >= districtPos) {
    this.x = 0;
    this.y = this.genderX * 0.95;
  } else if (x < (agePos - bridge) && x > bridge) {
    this.y = y + (this.ageX * 0.95 - y) / ceil((512/2 - x - bridge) / speed);
    this.x = x + speed;
  } else if (x > (agePos + bridge) && x < (districtPos - bridge)) {
    this.y = y + (this.districtX * 0.95 - y) / ceil((512 - x - bridge) / speed);
    this.x = x + speed;
  } else {
  	this.x = x + speed;
  }
}

//def remember(field) {
//  field.r = field.r - 0.1;
//  field.b = field.r - 0.1;
//  field.g = field.r - 0.1;
//  field.a = 1;
//}

def remember(field) {
  field.r = this.r;
  field.b = this.b;
  field.g = this.g;
  field.a = this.a;
}

def reset(field) {
  field.r = 1;
  field.b = 1;
  field.g = 1;
  field.a = 1;
}


def moveImage(x, y) {
  this.x = this.x + x;
  this.y = this.y + y;
}


static loop() {
  Turtle.move(1);
  Turtle.remember(Field);
  Field.draw(); 
  Image.draw();
  DistrictAxis.draw();
  GenderAxis.draw();
  AgeAxis.draw();
  Turtle.draw();
}

static drawByGender() {
  Filler.reset(Field);
  loop.start();
  Turtle.setStartForGender();
  Turtle.setRGBForGender();
}

static drawByAge() {
  Filler.reset(Field);
  loop.start();
  Turtle.setStartForAge();
  Turtle.setRGBForAge();
}

static drawByDistrict() {
  Filler.reset(Field);
  loop.start();
  Turtle.setStartForDistrict();
  Turtle.setRGBForDistrict();
}

static setup() {
  
  var axisHeight = 485;
  
  loop.stop();
  
  Filler.fillSpace("x", "y", width, height);
  Filler.reset(Field);
  
  Image.fillImage("x", "y", "r", "g", "b", "a", Label);
  Image.moveImage(20, axisHeight + 10);
  Image.draw();
    
  GenderAxis.setCount(1000);
  GenderAxis.setGenderAxis();
  GenderAxis.fillRandom("y", 0, axisHeight);
  GenderAxis.setA();
  GenderAxis.draw();
  
  AgeAxis.setCount(1000);
  AgeAxis.setAgeAxis();
  AgeAxis.fillRandom("y", 0, axisHeight);
  AgeAxis.setA();
  AgeAxis.draw();
  
  DistrictAxis.setCount(1000);
  DistrictAxis.setDistrictAxis();
  DistrictAxis.fillRandom("y", 0, axisHeight);
  DistrictAxis.setA();
  DistrictAxis.draw();
  
  Turtle.loadData(ShadamaData);
  
}
